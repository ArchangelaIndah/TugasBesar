Index: app/src/main/java/com/example/tubes/Register.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tubes\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport com.example.tubes.databinding.ActivityRegisterBinding\r\nimport com.example.tubes.room.User\r\nimport com.example.tubes.room.UserDB\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.android.material.textfield.TextInputLayout\r\n\r\nclass Register : AppCompatActivity() {\r\n    private lateinit var inputUsername: TextInputLayout\r\n    private lateinit var inputPassword: TextInputLayout\r\n    private lateinit var inputEmail: TextInputLayout\r\n    private lateinit var inputTanggalLahir: TextInputLayout\r\n    private lateinit var inputNomorTelepon: TextInputLayout\r\n    private lateinit var mainLayout: ConstraintLayout\r\n    private lateinit var binding : ActivityRegisterBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        val db by lazy { UserDB(this) }\r\n        getSupportActionBar()?.hide()\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityRegisterBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        var akses= true\r\n\r\n        binding.btnMasuk.setOnClickListener{\r\n            val moveLogin = Intent(this@Register, MainActivity::class.java)\r\n            startActivity(moveLogin)\r\n        }\r\n\r\n        binding.btnDaftar.setOnClickListener(View.OnClickListener {\r\n\r\n            val username: String = binding.inputLayoutUsername.getEditText()?.getText().toString()\r\n            val password: String = binding.inputLayoutPassword.getEditText()?.getText().toString()\r\n            val email: String = binding.inputLayoutEmail.getEditText()?.getText().toString()\r\n            val tanggalLahir: String = binding.inputLayoutTanggalLahir.getEditText()?.getText().toString()\r\n            val nomorTelepon: String = binding.inputLayoutNomorTelepon.getEditText()?.getText().toString()\r\n\r\n            val intent = Intent (this, MainActivity::class.java)\r\n            val mBundle = Bundle()\r\n\r\n            if(username.isEmpty()) {\r\n                binding.inputLayoutUsername.setError(\"Username must be filled with text\")\r\n                akses=false\r\n            }\r\n\r\n            if(password.isEmpty()) {\r\n                binding.inputLayoutPassword.setError(\"Password must be filled with text\")\r\n                akses=false\r\n            }\r\n\r\n            if(email.isEmpty()) {\r\n                binding.inputLayoutEmail.setError(\"Email must be filled with text\")\r\n                akses=false\r\n            }\r\n\r\n            if(tanggalLahir.isEmpty()) {\r\n                binding.inputLayoutTanggalLahir.setError(\"Tanggal Lahir must be filled with text\")\r\n                akses=false\r\n            }\r\n\r\n            if(nomorTelepon.isEmpty()) {\r\n                binding.inputLayoutNomorTelepon.setError(\"No Telepon must be filled with text\")\r\n                akses=false\r\n            }\r\n\r\n            if(binding.inputLayoutUsername.getEditText()?.getText()==null){\r\n                binding.inputLayoutUsername.getEditText()?.setText(\"\")\r\n            }\r\n\r\n            if(binding.inputLayoutPassword.getEditText()?.getText()==null){\r\n                binding.inputLayoutPassword.getEditText()?.setText(\"\")\r\n            }\r\n\r\n\r\n            if(akses==true){\r\n                db.userDao().addUser(User(0,username,email,tanggalLahir,nomorTelepon,password))\r\n                println(db.userDao().getUsers())\r\n                val moveHome = Intent(this@Register, MainActivity::class.java)\r\n\r\n                mBundle.putString(\"Username\",binding.inputLayoutUsername.getEditText()?.getText().toString())\r\n                mBundle.putString(\"Password\",binding.inputLayoutPassword.getEditText()?.getText().toString())\r\n                moveHome.putExtra(\"register\", mBundle)\r\n                startActivity(moveHome)\r\n            }\r\n\r\n        })\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tubes/Register.kt b/app/src/main/java/com/example/tubes/Register.kt
--- a/app/src/main/java/com/example/tubes/Register.kt	(revision d8eca43a043086291c59a0d018382735c4403ba3)
+++ b/app/src/main/java/com/example/tubes/Register.kt	(date 1664442499960)
@@ -20,21 +20,25 @@
     private lateinit var inputTanggalLahir: TextInputLayout
     private lateinit var inputNomorTelepon: TextInputLayout
     private lateinit var mainLayout: ConstraintLayout
-    private lateinit var binding : ActivityRegisterBinding
+    private lateinit var binding : ActivityRegisterBinding ? = null
+    private val notificationId1 = 101
 
     override fun onCreate(savedInstanceState: Bundle?) {
         val db by lazy { UserDB(this) }
         getSupportActionBar()?.hide()
         super.onCreate(savedInstanceState)
         binding = ActivityRegisterBinding.inflate(layoutInflater)
-        val view = binding.root
-        setContentView(view)
+//        val view = binding.root
+        setContentView(binding!!.root)
+
+        createNotificationonChannel()
 
         var akses= true
 
-        binding.btnMasuk.setOnClickListener{
+        binding!!.btnMasuk.setOnClickListener{
             val moveLogin = Intent(this@Register, MainActivity::class.java)
             startActivity(moveLogin)
+            sendNotification1()
         }
 
         binding.btnDaftar.setOnClickListener(View.OnClickListener {
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision d8eca43a043086291c59a0d018382735c4403ba3)
+++ b/.idea/gradle.xml	(date 1664445512418)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
